PRAGMA foreign_keys = ON;

CREATE TABLE IF NOT EXISTS SoundSpeedDictionary (
	Id INTEGER NOT NULL PRIMARY KEY,
	Title TEXT NOT NULL,
	Value TEXT DEFAULT NULL
	, UNIQUE(Title));
CREATE TABLE IF NOT EXISTS FieldDictionary (
	Id INTEGER NOT NULL PRIMARY KEY,
	Title TEXT NOT NULL);
CREATE TABLE IF NOT EXISTS Measurement (
	Id INTEGER NOT NULL PRIMARY KEY,

	Field INTEGER NOT NULL DEFAULT 0,
	Well  TEXT NOT NULL DEFAULT 0,
	Bush  TEXT NOT NULL DEFAULT 0,
	Shop  INTEGER NOT NULL DEFAULT 0,

	--Latitude  NUMERIC DEFAULT NULL,
	--Longitude NUMERIC DEFAULT NULL,
	--Altitude  NUMERIC DEFAULT NULL,
	--Accuracy  NUMERIC DEFAULT NULL,

	DeviceKind  INTEGER NOT NULL,
	DeviceNumber  INTEGER NOT NULL,
	DeviceName  TEXT DEFAULT NULL,
	DeviceProtocolId  INTEGER DEFAULT NULL,
	DevicePhyId  INTEGER DEFAULT NULL,

	MeasureKind INTEGER NOT NULL,
	MeasureBeginTimestamp DATETIME DEFAULT NULL,
	MeasureEndTimestamp DATETIME NOT NULL,
	MeasureComment TEXT DEFAULT NULL, 

	MailDistributionDateTime DATETIME DEFAULT NULL,
	MailDistributioDestination TEXT DEFAULT NULL,
	FileDistributionDateTime DATETIME DEFAULT NULL,
	FileDistributionDestination TEXT DEFAULT NULL
	, UNIQUE(DeviceKind, DeviceNumber, MeasureBeginTimestamp, MeasureEndTimestamp, Field, Well, Bush, Shop)
	);


CREATE TABLE IF NOT EXISTS Entitys (
	KindId INTEGER NOT NULL PRIMARY KEY,
	Title TEXT NOT NULL,
	UNIQUE(Title));

CREATE TABLE IF NOT EXISTS Attributes(
	Id INTEGER NOT NULL PRIMARY KEY,
	Title TEXT NOT NULL,
	TypeId INTEGER NOT NULL DEFAULT 1 CHECK (TypeId > 0 AND TypeId < 6 )
	, UNIQUE(Title)
	, UNIQUE(Id,TypeId)
);

CREATE TABLE IF NOT EXISTS ValInt (
	EntityKindId INTEGER NOT NULL REFERENCES Entitys(KindId) ON DELETE RESTRICT ON UPDATE RESTRICT,		
	EntityId INTEGER NOT NULL,	
	
	AttrTypeId INTEGER NOT NULL DEFAULT 1 CHECK (AttrTypeId = 1),
	AttrId INTEGER NOT NULL,
	
	Value INTEGER DEFAULT NULL
	, PRIMARY KEY(EntityId, AttrId, AttrTypeId )
	, FOREIGN KEY(AttrId,AttrTypeId) REFERENCES Attributes(Id,TypeId) ON DELETE RESTRICT ON UPDATE RESTRICT
);
	
CREATE TABLE IF NOT EXISTS ValFloat (
	EntityKindId INTEGER NOT NULL REFERENCES Entitys(KindId) ON DELETE RESTRICT ON UPDATE RESTRICT,	
	EntityId INTEGER NOT NULL,
	
	AttrTypeId INTEGER NOT NULL DEFAULT 5 CHECK (AttrTypeId = 5),
	AttrId INTEGER NOT NULL,
	
	Value REAL DEFAULT NULL
	, PRIMARY KEY(AttrId, AttrTypeId, EntityId )
	, FOREIGN KEY(AttrId,AttrTypeId) REFERENCES Attributes(Id,TypeId) ON DELETE RESTRICT ON UPDATE RESTRICT
);
	
CREATE TABLE IF NOT EXISTS ValString (
	EntityKindId INTEGER NOT NULL REFERENCES Entitys(KindId) ON DELETE RESTRICT ON UPDATE RESTRICT,	
	EntityId INTEGER NOT NULL,
	
	AttrId INTEGER NOT NULL,
	AttrTypeId INTEGER NOT NULL DEFAULT 2 CHECK (AttrTypeId = 2),
	
	Value TEXT DEFAULT NULL
	, PRIMARY KEY(AttrId, AttrTypeId, EntityId )
	, FOREIGN KEY(AttrId,AttrTypeId) REFERENCES Attributes(Id,TypeId) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS ValBlob (
	EntityKindId INTEGER NOT NULL REFERENCES Entitys(KindId) ON DELETE RESTRICT ON UPDATE RESTRICT,	
	EntityId INTEGER NOT NULL,
	
	AttrId INTEGER NOT NULL,
	AttrTypeId INTEGER NOT NULL DEFAULT 3 CHECK (AttrTypeId = 3),
	
	Value TEXT DEFAULT NULL
	, PRIMARY KEY(AttrId, AttrTypeId, EntityId )
	, FOREIGN KEY(AttrId,AttrTypeId) REFERENCES Attributes(Id,TypeId) ON DELETE RESTRICT ON UPDATE RESTRICT
);


